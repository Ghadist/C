#include <stdio.h>
#include <math.h>
#include <stdarg.h>

double Average(int quantity, ...);
double AverageWithPointer(double ptrArray[10]);
double BigSplit(double x, double y, double z);
double FunctionInFunction(double x, double y, double z, double (*bigsplit)(double x, double y, double z));
void Collision();


int main()
{
    double array[10] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
    double average = Average(10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9);
    average = AverageWithPointer(array);
    double x = 2;
    double y = 3;
    double z = 4;
    double calculate = FunctionInFunction(x, y, z, BigSplit);
    Collision();
    return 0;
}

double Average(int quantity, ...)
{
    double sum = 0;
    va_list pointer;
	  va_start(pointer, quantity);
    for(int index = 0; index<10; index++)
    {
        sum += va_arg(pointer, int);
    }
		va_end(pointer);
    return sum/10;
}

double AverageWithPointer(double ptrArray[10])
{
    double sum = 0;
    for(int index = 0; index<10; index++)
    {
        sum += *(ptrArray + index);
    }
    return sum/10;
}

double FunctionInFunction(double x, double y, double z, double (*bigsplit)(double x, double y, double z))
{
    return bigsplit(x, y, z) + log(x);
}

double BigSplit(double x, double y, double z)
{
    double stepFirst = (sqrt(x+y)) * log(z);
    double stepSecond = log10(y) + sqrt(x);
    return stepFirst/stepSecond;
}

void Collision()
{
    double arrayFirst[10] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
    double arraySecond[10] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
    
    arrayFirst[15] = 95;
    double support = 0;
    *(arrayFirst + 18) = 65;
}
